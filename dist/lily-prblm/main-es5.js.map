{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/error/error.component.ts","webpack:///src/app/error/error.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","dialog","isview","isLoading","count","form","evalue","value","Startend","Enumber","split","map","Number","check","every","element","isNaN","open","divisor","i","rev_day","n","revval","reverse","join","absval","Math","abs","reset","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","entryComponents","ErrorComponent","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ErrorComponent } from './error/error.component';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n isview = false;\nisLoading = false;\npublic count = 0;\ndivisor: number;\nform: NgForm;\nfinal: number;\nconstructor(private dialog: MatDialog){}\nngOninit(){\n\n    }\n    onSubmit(form: NgForm){\n      this.isview = true;\n      this.isLoading = false;\n      this.form = form;\n      const evalue = form.value.Startend;\n      // console.log(evalue);\n      const Enumber = evalue.split(' ').map(Number);\n     // console.log(Enumber);\n      const check = Enumber.every(function(element) {\n         if (Number.isNaN(element)){\n          return false;\n         }\n\n        else{\n          return true;\n        }\n        });\n     // console.log(check);\n      if (!check)\n        {\n          this.dialog.open(ErrorComponent);\n\n        }\n      else{\n      this.divisor = Enumber[2];\n     // console.log(this.divisor);\n      for (let i = Enumber[0]; i <= Enumber[1]; i++)\n            {\n        // console.log('original :', i);\n\n        this.final = this.rev_day(i);\n            }\n           }\n        }\n\n    rev_day(n)\n    {\n\n        n = n + '';\n        const revval = n.split('').reverse().join('');\n        const absval = Math.abs(n - revval);\n        // console.log('reverse:', revval);\n        // console.log('differnce:', absval);\n        if ((absval % this.divisor) == 0)\n      {\n        this.count = this.count + 1;\n      }\n      //  console.log('days', this.count);\n\n        return this.count;\n    }\n\n    Destroy(){\n     this.isview = false;\n     this.form.reset();\n     this.count = 0;\n     this.final = 0;\n     this.isLoading = false;\n    }\n\n    }\n","\n<mat-card>\n  <mat-spinner *ngIf='isLoading'></mat-spinner>\n \n    <form (submit)=\"onSubmit(Days)\" #Days=\"ngForm\" *ngIf=\"!isview\">\n      <mat-form-field>\n        <input\n        matInput\n        type=\"Startend\"\n      ngModel\n        placeholder=\"Enter first Day and last Day and Lucky Factor with space\"\n        name=\"Startend\"\n        #Startend=\"ngModel\"\n        required>  \n      <mat-error *ngIf=\"Startend.invalid\">Please enter a valid Number.</mat-error>\n    </mat-form-field>\n      <button\n        mat-raised-button\n        color=\"accent\"\n        type=\"submit\" *ngIf='!isLoading'>Submit</button>  \n      </form>\n   \n      <mat-card>\n        <p> The total Beautiful Days are :{{final}} </p>\n        <button\n        mat-raised-button\n        color=\"accent\"\n        type=\"submit\" *ngIf='isview' (click)=\"Destroy()\">Reset</button> \n      </mat-card>\n\n  </mat-card>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport { ErrorComponent } from './error/error.component';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ErrorComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatPaginatorModule,\n    MatDialogModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents:[ErrorComponent]\n})\nexport class AppModule { }\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 mat-dialog-title>Invalid Values</h1>\n<div mat-dialog-content>Please enter only Integers</div>\n<button mat-raised-button mat-dialog-close color=\"accent\">Okay</button>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}